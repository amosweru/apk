name: Build APK

on:
  push:
    branches:
      - main   # Trigger workflow when pushing to the main branch
  pull_request:
    branches:
      - main   # Trigger workflow for pull requests targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest   # The environment where the workflow will run

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2   # Checkout the repository to the runner so the next steps can access it

    - name: Set up Java 17
      uses: actions/setup-java@v2   # Set up JDK 17
      with:
        java-version: '17'

    - name: Install Android SDK
      run: |
        sudo apt update
        sudo apt install -y unzip
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
        unzip commandlinetools-linux-8512546_latest.zip
        sudo mkdir -p /opt/android-sdk/cmdline-tools
        sudo mv cmdline-tools /opt/android-sdk/cmdline-tools/latest
        echo "export ANDROID_HOME=/opt/android-sdk" >> $GITHUB_ENV
        echo "export PATH=\$PATH:/opt/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_ENV
        yes | /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager --licenses
        /opt/android-sdk/cmdline-tools/latest/bin/sdkmanager "platform-tools" "build-tools;30.0.3" "platforms;android-30"

    - name: Set up Gradle
      run: |
        wget https://services.gradle.org/distributions/gradle-7.5-bin.zip
        unzip gradle-7.5-bin.zip
        sudo mv gradle-7.5 /opt/gradle
        echo "export PATH=\$PATH:/opt/gradle/bin" >> $GITHUB_ENV

    - name: Build APK with Gradle
      run: |
        ./gradlew assembleRelease   # Build the release APK (use assembleDebug for debug APK)

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v3
      with:
        name: apk-artifact
        path: app/build/outputs/apk/release/*.apk   # Path to your APK file
